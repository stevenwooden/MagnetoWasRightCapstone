name: CI/CD
on:
  push:
    branches : [ main ]

jobs:
  build :
    runs-on : ubuntu-latest
    strategy :
      matrix :
        node-version : [19.x]

    steps :
      - name: Checkout repository
        uses: actions/checkout@v3
            
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD : 'true'
        with:
          node-version : ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          cd client
          npm install

      - name: Install dependencies
        run: |
          cd server
          npm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username : ${{ secrets.DOCKER_HUB_USERNAME }}
          password : ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push client Docker image
        id: build_client
        uses: docker/build-push-action@v4
        with:
          context : ./client
          file: ./client/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mwr-client    

      - name: Build and push client Docker image
        id: build_server
        uses: docker/build-push-action@v4
        with:
          context : ./server
          file: ./server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mwr-server    
      - name: Image digest
        run: |
          echo "Client Image Digest: ${{ steps.build_client.outputs.digest }}"
          echo "Server Image Digest: ${{ steps.build_server.outputs.digest }}"